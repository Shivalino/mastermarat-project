# simple-lesson-converter.ps1
# –ü—Ä–æ—Å—Ç–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä —É—Ä–æ–∫–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –≤ JSON

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫
$projectRoot = Split-Path -Parent $PSScriptRoot
$tempUploadPath = Join-Path $projectRoot "temp_upload"
$contentPath = Join-Path $tempUploadPath "content"
$templatesPath = Join-Path $tempUploadPath "templates"

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
function Initialize-Folders {
    @($tempUploadPath, $contentPath, $templatesPath) | ForEach-Object {
        if (-not (Test-Path $_)) {
            New-Item -ItemType Directory -Force -Path $_ | Out-Null
        }
    }
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –∫—É—Ä—Å–æ–≤
    1..8 | ForEach-Object {
        $courseFolder = Join-Path $contentPath "course0$_"
        if (-not (Test-Path $courseFolder)) {
            New-Item -ItemType Directory -Force -Path $courseFolder | Out-Null
        }
    }
    
    Write-Host "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green
}

# –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
function Create-Template {
    $templateFile = Join-Path $templatesPath "lesson_template.txt"
    if (-not (Test-Path $templateFile)) {
        @"
# –®–∞–±–ª–æ–Ω —É—Ä–æ–∫–∞ MasterMarat

## TITLE: –ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞

## VIDEO: lesson001.mp4

## THUMBNAIL: lesson001.jpg

## CONTENT_POINTS:
- –û—Å–Ω–æ–≤–Ω–æ–π –ø—É–Ω–∫—Ç 1
- –û—Å–Ω–æ–≤–Ω–æ–π –ø—É–Ω–∫—Ç 2
- –û—Å–Ω–æ–≤–Ω–æ–π –ø—É–Ω–∫—Ç 3

## IMPORTANT_NOTES:
- –í–∞–∂–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ 1
- –í–∞–∂–Ω–∞—è –∑–∞–º–µ—Ç–∫–∞ 2

## ADDITIONAL_INFO:
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è 1
- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è 2
"@ | Out-File -FilePath $templateFile -Encoding UTF8
        Write-Host "‚úÖ –®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω: $templateFile" -ForegroundColor Green
    }
}

# –ü–∞—Ä—Å–∏–Ω–≥ —Ñ–∞–π–ª–∞ —É—Ä–æ–∫–∞
function Parse-Lesson {
    param([string]$FilePath)
    
    if (-not (Test-Path $FilePath)) {
        Write-Host "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        return $null
    }
    
    $content = Get-Content $FilePath -Raw -Encoding UTF8
    
    # –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
    $lesson = @{
        title = ""
        video_file = ""
        thumbnail_file = ""
        content_points = @()
        important_notes = @()
        additional_info = @()
    }
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    if ($content -match '## TITLE:\s*(.+)') {
        $lesson.title = $matches[1].Trim()
    }
    
    if ($content -match '## VIDEO:\s*(.+)') {
        $lesson.video_file = $matches[1].Trim()
    }
    
    if ($content -match '## THUMBNAIL:\s*(.+)') {
        $lesson.thumbnail_file = $matches[1].Trim()
    }
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ø–∏—Å–∫–∏
    if ($content -match '## CONTENT_POINTS:\s*\n((?:- .+\n?)+)') {
        $lesson.content_points = $matches[1] -split '\n' | 
            Where-Object { $_ -match '^-\s*(.+)' } | 
            ForEach-Object { $matches[1].Trim() }
    }
    
    if ($content -match '## IMPORTANT_NOTES:\s*\n((?:- .+\n?)+)') {
        $lesson.important_notes = $matches[1] -split '\n' | 
            Where-Object { $_ -match '^-\s*(.+)' } | 
            ForEach-Object { $matches[1].Trim() }
    }
    
    if ($content -match '## ADDITIONAL_INFO:\s*\n((?:- .+\n?)+)') {
        $lesson.additional_info = $matches[1] -split '\n' | 
            Where-Object { $_ -match '^-\s*(.+)' } | 
            ForEach-Object { $matches[1].Trim() }
    }
    
    return $lesson
}

# –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ñ–∞–π–ª–∞
function Convert-File {
    Write-Host "`nüìÑ –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –§–ê–ô–õ–ê" -ForegroundColor Cyan
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã
    $files = Get-ChildItem -Path $tempUploadPath -Filter "*.txt" -File | 
             Where-Object { $_.Name -ne "lesson_template.txt" }
    
    if ($files.Count -eq 0) {
        Write-Host "–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ $tempUploadPath" -ForegroundColor Yellow
        return
    }
    
    Write-Host "`n–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:" -ForegroundColor Yellow
    for ($i = 0; $i -lt $files.Count; $i++) {
        Write-Host "$($i+1). $($files[$i].Name)" -ForegroundColor White
    }
    
    $choice = Read-Host "`n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞"
    $selectedFile = $files[[int]$choice - 1].FullName
    
    # –í—ã–±–æ—Ä –∫—É—Ä—Å–∞
    Write-Host "`n–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å (1-8):" -ForegroundColor Yellow
    $courseNum = Read-Host "–ù–æ–º–µ—Ä –∫—É—Ä—Å–∞"
    $courseId = "course0$courseNum"
    
    # ID —É—Ä–æ–∫–∞
    $lessonId = Read-Host "ID —É—Ä–æ–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: lesson001)"
    
    # –ü–∞—Ä—Å–∏–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º
    $lesson = Parse-Lesson -FilePath $selectedFile
    if ($lesson) {
        $outputPath = Join-Path $contentPath $courseId "$lessonId.json"
        $lesson | ConvertTo-Json -Depth 10 | Out-File $outputPath -Encoding UTF8
        
        Write-Host "`n‚úÖ –°–æ–∑–¥–∞–Ω: $outputPath" -ForegroundColor Green
        Write-Host "–ù–∞–∑–≤–∞–Ω–∏–µ: $($lesson.title)" -ForegroundColor White
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —É—Ä–æ–∫–∞
function Create-New {
    Write-Host "`nüìù –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –£–†–û–ö–ê" -ForegroundColor Cyan
    
    $courseNum = Read-Host "–ù–æ–º–µ—Ä –∫—É—Ä—Å–∞ (1-8)"
    $lessonNum = Read-Host "–ù–æ–º–µ—Ä —É—Ä–æ–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 001)"
    
    $fileName = "course0${courseNum}_lesson${lessonNum}.txt"
    $filePath = Join-Path $tempUploadPath $fileName
    
    # –ö–æ–ø–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω
    $templatePath = Join-Path $templatesPath "lesson_template.txt"
    Copy-Item $templatePath $filePath
    
    # –ó–∞–º–µ–Ω—è–µ–º –Ω–æ–º–µ—Ä–∞ –≤ —à–∞–±–ª–æ–Ω–µ
    $content = Get-Content $filePath -Raw
    $content = $content -replace "lesson001", "lesson$lessonNum"
    $content | Out-File $filePath -Encoding UTF8
    
    Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω: $filePath" -ForegroundColor Green
    Start-Process notepad.exe $filePath
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function Main-Menu {
    Initialize-Folders
    Create-Template
    
    while ($true) {
        Clear-Host
        Write-Host "üéì –ö–û–ù–í–ï–†–¢–ï–† –£–†–û–ö–û–í" -ForegroundColor Cyan
        Write-Host "==================" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "1. –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —É—Ä–æ–∫" -ForegroundColor Yellow
        Write-Host "2. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª" -ForegroundColor Yellow
        Write-Host "3. –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É" -ForegroundColor Yellow
        Write-Host "0. –í—ã—Ö–æ–¥" -ForegroundColor Red
        Write-Host ""
        
        $choice = Read-Host "–í—ã–±–æ—Ä"
        
        switch ($choice) {
            "1" { Create-New }
            "2" { Convert-File }
            "3" { Start-Process explorer.exe $tempUploadPath }
            "0" { return }
        }
        
        if ($choice -ne "3" -and $choice -ne "0") {
            Read-Host "`nEnter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è"
        }
    }
}

# –ó–∞–ø—É—Å–∫
Main-Menu