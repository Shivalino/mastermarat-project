#!/bin/bash

# test-upload-function.sh
# –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –∞–ø–ª–æ–∞–¥–∞

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
GRAY='\033[0;37m'
MAGENTA='\033[0;35m'
NC='\033[0m' # No Color

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
TEMP_UPLOAD_PATH="$SCRIPT_DIR/temp_upload"
CONTENT_PATH="$TEMP_UPLOAD_PATH/content"
THUMBNAILS_PATH="$TEMP_UPLOAD_PATH/thumbnails"

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏
SUPPORTED_LANGUAGES=("ru" "ua" "en")

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
check_content_files() {
    local language="$1"
    local content_type="$2"
    local video_filename="$3"
    
    local base_path="$CONTENT_PATH/$language/$content_type"
    local thumbnail_base_path="$THUMBNAILS_PATH/$language/$content_type"
    
    local video_path="$base_path/${video_filename}.mp4"
    local thumbnail_path="$thumbnail_base_path/${video_filename}.jpg"
    local description_path="$base_path/${video_filename}.md"
    
    local has_video=false
    local has_thumbnail=false
    local has_description=false
    
    [[ -f "$video_path" ]] && has_video=true
    [[ -f "$thumbnail_path" ]] && has_thumbnail=true
    [[ -f "$description_path" ]] && has_description=true
    
    echo "$has_video|$has_thumbnail|$has_description|$video_path|$thumbnail_path|$description_path"
}

# –§—É–Ω–∫—Ü–∏—è –∞–ø–ª–æ–∞–¥–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
upload_content_to_r2() {
    echo -e "\n${CYAN}‚òÅÔ∏è  –ê–ü–õ–û–ê–î –ö–û–ù–¢–ï–ù–¢–ê –í R2${NC}"
    
    # –í—ã–±–æ—Ä —è–∑—ã–∫–∞
    echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:${NC}"
    for i in "${!SUPPORTED_LANGUAGES[@]}"; do
        local lang_code="${SUPPORTED_LANGUAGES[$i]}"
        local lang_name
        case "$lang_code" in
            "ru") lang_name="–†—É—Å—Å–∫–∏–π" ;;
            "ua") lang_name="–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π" ;;
            "en") lang_name="–ê–Ω–≥–ª–∏–π—Å–∫–∏–π" ;;
        esac
        echo -e "${WHITE}$((i+1)). $lang_code - $lang_name${NC}"
    done
    
    read -p "–ù–æ–º–µ—Ä —è–∑—ã–∫–∞ (1-${#SUPPORTED_LANGUAGES[@]}): " lang_choice
    local selected_lang="${SUPPORTED_LANGUAGES[$((lang_choice-1))]}"
    
    # –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:${NC}"
    echo -e "${WHITE}1. demo - –î–µ–º–æ —É—Ä–æ–∫${NC}"
    echo -e "${WHITE}2. course - –û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å${NC}"
    
    read -p "–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (1-2): " content_type
    
    if [[ "$content_type" == "1" ]]; then
        content_folder="demo"
        course_display="–î–µ–º–æ"
    else
        read -p "–ù–æ–º–µ—Ä –∫—É—Ä—Å–∞ (1-8): " course_num
        content_folder="course$course_num"
        course_display="–ö—É—Ä—Å $course_num"
    fi
    
    local target_folder="$CONTENT_PATH/$selected_lang/$content_folder"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏
    if [[ ! -d "$target_folder" ]]; then
        echo -e "${RED}‚ùå –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $target_folder${NC}"
        return
    fi
    
    # –ù–∞–π—Ç–∏ –≤—Å–µ .md —Ñ–∞–π–ª—ã
    local md_files=($(find "$target_folder" -name "*.md" -type f 2>/dev/null))
    
    if [[ ${#md_files[@]} -eq 0 ]]; then
        echo -e "${RED}‚ùå –í –ø–∞–ø–∫–µ –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–π (.md)${NC}"
        return
    fi
    
    echo -e "\n${CYAN}üìã –ü–†–û–í–ï–†–ö–ê –ö–û–ù–¢–ï–ù–¢–ê${NC}"
    echo -e "${WHITE}–ü–∞–ø–∫–∞: $target_folder${NC}"
    echo -e "${WHITE}–Ø–∑—ã–∫: $selected_lang${NC}"
    echo -e "${WHITE}–¢–∏–ø: $course_display${NC}"
    
    local ready_to_upload=0
    local all_files=()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π md —Ñ–∞–π–ª
    for md_file in "${md_files[@]}"; do
        local base_name=$(basename "$md_file" .md)
        
        if [[ "$base_name" =~ ^video[0-9]+$ ]]; then
            local results=$(check_content_files "$selected_lang" "$content_folder" "$base_name")
            IFS='|' read -ra RESULT_PARTS <<< "$results"
            
            local has_video="${RESULT_PARTS[0]}"
            local has_thumbnail="${RESULT_PARTS[1]}"
            local has_description="${RESULT_PARTS[2]}"
            local video_path="${RESULT_PARTS[3]}"
            local thumbnail_path="${RESULT_PARTS[4]}"
            local description_path="${RESULT_PARTS[5]}"
            
            echo -e "\n${YELLOW}üìÑ $base_name${NC}"
            
            if [[ "$has_video" == "true" ]]; then
                echo -e "   ${GREEN}–í–∏–¥–µ–æ: ‚úÖ $video_path${NC}"
            else
                echo -e "   ${RED}–í–∏–¥–µ–æ: ‚ùå $video_path${NC}"
            fi
            
            if [[ "$has_thumbnail" == "true" ]]; then
                echo -e "   ${GREEN}–ü—Ä–µ–≤—å—é: ‚úÖ $thumbnail_path${NC}"
            else
                echo -e "   ${RED}–ü—Ä–µ–≤—å—é: ‚ùå $thumbnail_path${NC}"
            fi
            
            if [[ "$has_description" == "true" ]]; then
                echo -e "   ${GREEN}–û–ø–∏—Å–∞–Ω–∏–µ: ‚úÖ $description_path${NC}"
            else
                echo -e "   ${RED}–û–ø–∏—Å–∞–Ω–∏–µ: ‚ùå $description_path${NC}"
            fi
            
            local is_ready=false
            if [[ "$has_video" == "true" && "$has_thumbnail" == "true" && "$has_description" == "true" ]]; then
                is_ready=true
                ((ready_to_upload++))
            fi
            
            all_files+=("$base_name|$is_ready|$video_path|$thumbnail_path|$description_path")
        fi
    done
    
    if [[ ${#all_files[@]} -eq 0 ]]; then
        echo -e "\n${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–ø–ª–æ–∞–¥–∞${NC}"
        return
    fi
    
    echo -e "\n${CYAN}üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:${NC}"
    echo -e "${WHITE}   –í—Å–µ–≥–æ —É—Ä–æ–∫–æ–≤: ${#all_files[@]}${NC}"
    if [[ $ready_to_upload -gt 0 ]]; then
        echo -e "${GREEN}   –ì–æ—Ç–æ–≤—ã –∫ –∞–ø–ª–æ–∞–¥—É: $ready_to_upload${NC}"
    else
        echo -e "${RED}   –ì–æ—Ç–æ–≤—ã –∫ –∞–ø–ª–æ–∞–¥—É: $ready_to_upload${NC}"
    fi
    
    local not_ready=$((${#all_files[@]} - ready_to_upload))
    if [[ $not_ready -gt 0 ]]; then
        echo -e "${YELLOW}   –ù–µ –≥–æ—Ç–æ–≤—ã: $not_ready${NC}"
    else
        echo -e "${GREEN}   –ù–µ –≥–æ—Ç–æ–≤—ã: $not_ready${NC}"
    fi
    
    if [[ $ready_to_upload -eq 0 ]]; then
        echo -e "\n${RED}‚ùå –ù–µ—Ç –≥–æ—Ç–æ–≤—ã—Ö –∫ –∞–ø–ª–æ–∞–¥—É —Ñ–∞–π–ª–æ–≤${NC}"
        return
    fi
    
    # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
    echo -e "\n${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "${WHITE}1. –°—É—Ö–æ–π –ø—Ä–æ–≥–æ–Ω (–ø–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ)${NC}"
    echo -e "${WHITE}2. –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ DEV —Å—Ä–µ–¥—É${NC}"
    echo -e "${WHITE}3. –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤ PROD —Å—Ä–µ–¥—É${NC}"
    echo -e "${RED}0. –û—Ç–º–µ–Ω–∞${NC}"
    
    read -p "–í–∞—à –≤—ã–±–æ—Ä: " upload_choice
    
    if [[ "$upload_choice" == "0" ]]; then
        echo -e "${YELLOW}–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞${NC}"
        return
    fi
    
    local is_dry_run=false
    local environment="dev"
    
    if [[ "$upload_choice" == "1" ]]; then
        is_dry_run=true
    elif [[ "$upload_choice" == "3" ]]; then
        environment="prod"
    fi
    
    echo -e "\n${CYAN}üöÄ –ù–ê–ß–ò–ù–ê–ï–ú –ê–ü–õ–û–ê–î${NC}"
    if [[ "$is_dry_run" == "true" ]]; then
        echo -e "${YELLOW}–†–µ–∂–∏–º: DRY RUN${NC}"
    else
        echo -e "${GREEN}–†–µ–∂–∏–º: ${environment^^}${NC}"
    fi
    
    local uploaded_count=0
    
    for file_info in "${all_files[@]}"; do
        IFS='|' read -ra FILE_PARTS <<< "$file_info"
        local base_name="${FILE_PARTS[0]}"
        local is_ready="${FILE_PARTS[1]}"
        local video_path="${FILE_PARTS[2]}"
        local thumbnail_path="${FILE_PARTS[3]}"
        local description_path="${FILE_PARTS[4]}"
        
        if [[ "$is_ready" == "true" ]]; then
            echo -e "\n${GREEN}üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º: $base_name${NC}"
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç–∏ –≤ R2
            local r2_video_path="content/$selected_lang/$content_folder/${base_name}.mp4"
            local r2_thumbnail_path="thumbnails/$selected_lang/$content_folder/${base_name}.jpg"
            local r2_description_path="content/$selected_lang/$content_folder/${base_name}.md"
            
            if [[ "$is_dry_run" == "true" ]]; then
                echo -e "   ${GRAY}[DRY RUN] –í–∏–¥–µ–æ: $video_path ‚Üí $r2_video_path${NC}"
                echo -e "   ${GRAY}[DRY RUN] –ü—Ä–µ–≤—å—é: $thumbnail_path ‚Üí $r2_thumbnail_path${NC}"
                echo -e "   ${GRAY}[DRY RUN] –û–ø–∏—Å–∞–Ω–∏–µ: $description_path ‚Üí $r2_description_path${NC}"
                ((uploaded_count++))
            else
                # –†–µ–∞–ª—å–Ω—ã–π –∞–ø–ª–æ–∞–¥ —á–µ—Ä–µ–∑ Node.js —Å–∫—Ä–∏–ø—Ç
                echo -e "   ${GRAY}–í—ã–∑—ã–≤–∞–µ–º: node scripts/upload_content_to_r2.js --env $environment --course $content_folder${NC}"
                
                # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–æ–≤ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
                # –ü–æ–∫–∞ –¥–µ–ª–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é
                echo -e "   ${GREEN}‚úÖ [–°–ò–ú–£–õ–Ø–¶–ò–Ø] –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: $base_name${NC}"
                ((uploaded_count++))
            fi
        fi
    done
    
    echo -e "\n${GREEN}‚úÖ –ê–ü–õ–û–ê–î –ó–ê–í–ï–†–®–ï–ù${NC}"
    echo -e "${WHITE}   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: $uploaded_count –∏–∑ $ready_to_upload –≥–æ—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤${NC}"
    
    if [[ "$is_dry_run" == "false" && $uploaded_count -gt 0 ]]; then
        echo -e "\n${CYAN}üîó –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:${NC}"
        echo -e "${CYAN}   https://api.mastermarat.com/video/$selected_lang/$content_folder/${NC}"
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        clear
        echo -e "${CYAN}üéì –¢–ï–°–¢ –§–£–ù–ö–¶–ò–ò –ê–ü–õ–û–ê–î–ê${NC}"
        echo -e "${CYAN}========================${NC}"
        echo ""
        echo -e "${MAGENTA}1. –ê–ø–ª–æ–∞–¥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ R2${NC}"
        echo -e "${YELLOW}2. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤${NC}"
        echo -e "${RED}0. –í—ã—Ö–æ–¥${NC}"
        echo ""
        echo -e "${CYAN}–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏: ${SUPPORTED_LANGUAGES[*]}${NC}"
        echo ""
        
        read -p "–í—ã–±–æ—Ä: " choice
        
        case "$choice" in
            "1") upload_content_to_r2 ;;
            "2") 
                echo -e "\n${CYAN}üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ temp_upload:${NC}"
                tree "$TEMP_UPLOAD_PATH" -I "*.placeholder" 2>/dev/null || find "$TEMP_UPLOAD_PATH" -type f | head -20
                ;;
            "0") return ;;
        esac
        
        if [[ "$choice" != "0" ]]; then
            read -p "Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        fi
    done
}

# –ó–∞–ø—É—Å–∫
main_menu